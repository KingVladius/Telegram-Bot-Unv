from aiogram.types import CallbackQuery, Message
from aiogram.fsm.context import FSMContext
import Tg_bot.Keyboard as Keyboard
import Tg_bot.Info as Info
import Tg_bot.Question as Question
import Tg_bot.Func as Func
import Tg_bot.Help as Help
import Tg_bot.Database.Requests as Req
import Tg_bot.Support as Support


async def call_menu(callback: CallbackQuery, state: FSMContext ):
    user = callback.from_user.first_name
    id = callback.from_user.id
    print(id, user)
    if callback.data == 'edit_quests':    # –ú–µ–Ω—é –¥–ª—è –≤–ø–∏—Å—É–≤–∞–Ω–Ω—è –∞–±–æ —Ä–µ–¥–∞–∫—Ç–æ—Ä–∞
        await callback.answer('')
        await callback.message.edit_text('–Ø–∫–µ –ø–∏—Ç–∞–Ω–Ω—è –≤–∏ –± —Ö–æ—Ç—ñ–ª–∏ –∑–∞–ø–∏—Å–∞—Ç–∏ –∞–±–æ –≤—ñ–¥—Ä–µ–¥–∞–≥—É–≤–∞—Ç–∏?', reply_markup=Keyboard.edit_quest_menu)

    elif callback.data == 'edit':           # –†–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è 
        await callback.answer('–í–∏ –æ–±—Ä–∞–ª–∏ —Ä–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è –ü–æ–ø—É–ª—è—Ä–Ω–∏—Ö –ø–∏—Ç–∞–Ω—å')
        await Question.edit_menu(callback.message)

    elif callback.data == 'edit_topic':
        await callback.answer('')
        await Question.edit_topic(callback.message)

    elif callback.data == 'edit_quest':
        await callback.answer('')
        await Question.choice_topic(callback.message)

    elif callback.data == 'edit_answer':
        await callback.answer('')
        await Question.choice_topic_two(callback.message)

    elif callback.data == 'back_edit':
        await callback.answer('')
        await Func.popular_que(callback.message)

    elif callback.data == 'edit_menu_back':
        await callback.answer('')
        await Question.edit_menu(callback.message)

    elif callback.data == 'edit_true':
        await callback.answer('–ó–∞–ø–∏—Å—É—î–º–æ —â–µ –æ–¥–Ω–µ –ø–∏—Ç–∞–Ω–Ω—è')
        await Question.note_topic(callback.message)

    elif callback.data == 'edit_false':
        await callback.answer('–í–∏ –ø–æ–≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –≥–æ–ª–ª–æ–≤–Ω–µ –º–µ–Ω—é')
        await Question.Choose_edit_false(callback.message)

    elif callback.data =='delete':
        await callback.answer('')
        await Question.delete_question(callback.message)

    elif callback.data == 'notes':          # –ó–∞–ø–∏—Å –ø–∏—Ç–∞–Ω–Ω—è –≤ –±–¥
        await callback.answer('')
        await Question.note_topic(callback.message)

    elif callback.data == 'back_quest':     # –ü–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è –Ω–∞ –æ–¥–Ω–µ –º–µ–Ω—é –Ω–∞–∑–∞–¥
        await callback.answer('')
        await callback.message.edit_text('–í–∏ –≤ –º–µ–Ω—é –¥–ª—è –ø–æ–ø—É–ª—è—Ä–Ω–∏—Ö –∑–∞–≤–¥–∞–Ω—å, —â–æ –≤–∏ –± —Ö–æ—Ç—ñ–ª–∏ –∑—Ä–æ–±–∏—Ç–∏?', reply_markup= Keyboard.quest_menu)

    elif callback.data == 'topic_new':      # –ó–∞–ø–∏—Å –Ω–æ–≤–æ–≥–æ –±–ª–æ–∫—É –ø–∏—Ç–∞–Ω—å 
        await callback.answer("–í–∏ –æ–±–æ–±—Ä–∞–ª–∏ –∑–∞–ø–∏—Å–∞—Ç–∏ –Ω–æ–≤–∏–π –±–ª–æ–∫")
        await Question.set_new_topic(callback.message, state)

    elif callback.data == 'topic_old':      # –ó–∞–ø–∏—Å —Å—Ç–∞—Ä–æ–≥–æ –±–ª–æ–∫—É –ø–∏—Ç–∞–Ω–Ω—å 
        await callback.answer("–í–∏ –æ–±–æ–±—Ä–∞–ª–∏ (–æ–±—Ä–∞—Ç–∏ —Å—Ç–∞—Ä–∏–π –±–ª–æ–∫)")
        await Question.set_old_topic(callback.message, state)

    elif callback.data == 'out_popular':    # –ù–∞–∑–∞–¥ –≤ –ø–æ–ø—É–ª—è—Ä–Ω—ñ –ø–∏—Ç–∞–Ω–Ω—è
        await callback.answer('–í–∏ –ø–æ–≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –ü–æ–ø—É–ª—è—Ä–Ω—ñ –ø–∏—Ç–∞–Ω–Ω—è')
        await Func.poopular_question_edit(callback.message)

    elif callback.data == 'bd_admin_tabl':  # –¢–∞–±–ª–∏—Ü—ñ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä—ñ–≤ 
        await callback.answer("–í–∏ –æ–±—Ä–∞–ª–∏ —Ç–∞–±–ª–∏—Ü—ñ –∞–¥–º—ñ–Ω—ñ—Å—Ä–∞—Ç–æ—Ä—ñ–≤")
        await Func.get_all_admin_tabl(callback.message)

    elif callback.data == 'bd_admin_role':  # –ó–º—ñ–Ω–∞ —Ä–æ–ª—ñ –¥–ª –∞–¥–º—ñ–Ω—ñ–≤
        await callback.answer("–í–∏ –æ–±—Ä–∞–ª–∏ –∑–º—ñ–Ω—É —Ä–æ–ª—ñ")
        await Func.new_role(callback.message, state)

    elif callback.data == "back_to_menu":   # –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é 
        await callback.answer("–í–∏ –ø–æ–≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –º–µ–Ω—é –∞–¥–º—ñ–Ω—ñ–≤")
        await Func.admin_menu_bd_edit(callback.message)

    elif callback.data == 'chanel_func':    # –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é
        await callback.answer('–í–∏ –ø–æ–≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –º–µ–Ω—é –∞–¥–º—ñ–Ω—ñ–≤')
        await state.clear()
        await Func.admin_menu_bd_edit(callback.message)

    elif callback.data == 'to_menu':        # –ù–∞–∑–∞–¥ –≤ –≥–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é
        await callback.answer("–í–∏ –æ–±—Ä–∞–ª–∏ –≥–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é")
        await callback.message.edit_text('–í–∏ –ø–æ–≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –≥–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é')
        await callback.message.answer("–ó–Ω–∞–Ω–Ω—è —á–µ–∫–∞—é—Ç—å —Ç–µ–±–µ!", reply_markup=Keyboard.menu)

    elif callback.data == '2':              # –î–æ–ø–æ–º–æ–≥–∞ –≤ –∞–¥–º—ñ–Ω—ñ–≤
        await callback.answer('')
        await Help.get_help_popular_question(callback.message)

    elif callback.data == '1':              # –î–æ–ø–æ–º–æ–≥–∞ –≤ –∞–¥–º—ñ–Ω—ñ–≤ 
        await callback.answer('')
        await Help.get_help_admin(callback.message)

    elif callback.data == 'back_all_help':  # –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é –¥–æ–ø–æ–º–æ–≥–∏
        await callback.answer('')
        await Help.help_inf_two(callback.message) 

    elif callback.data == 'return_topic':
        await callback.answer('–í–∏ –ø–æ–≤–µ—Ä–Ω—É–ª–∏—Å—å –¥–æ –≤–∏–±–æ—Ä—É —Ç–µ–º–∏')
        await Question.abitur_topic_two(callback.message)
# –ê–±—ñ—Ç—É—Ä—ñ—î–Ω—Ç–∏

    elif callback.data == 'online_support':
        await callback.answer('–í–∏ –æ–±—Ä–∞–ª–∏ –æ–Ω–ª–∞–π–Ω –ø—ñ–¥—Ç—Ä–∏–º–∫—É')
        await Support.support_start(callback.message, state)
    
    elif callback.data == 'to_menu_help':
        await callback.answer('–í–∏ –ø–æ–≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –º–µ–Ω—é –¥–æ–ø–æ–º–æ–≥–∏')
        await Help.abitur_help_two(callback.message)

    elif callback.data == '1.1':
        await callback.answer('')
        await Help.help_11(callback.message)

    elif callback.data == '2.2':
        await callback.answer('')
        await Help.help_22(callback.message)

    elif callback.data == '3.3':
        await callback.answer('')
        await Help.help_33(callback.message)

    # elif callback.data == '4.4':
    #     await callback.answer('')
    #     await Help.help_44(callback.message)
        
    elif callback.data == '5.5':
        await callback.answer('')
        await Help.help_55(callback.message)

    elif callback.data == 'q_true':
        await callback.answer('')
        await Support.support_off(callback)

    elif callback.data == 'q_false':
        await callback.answer('')
        await Support.support_not_off(callback)

# –Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è
    elif callback.data == 'univ': 
        await Info.inf_univ(callback.message)

    elif callback.data == 'fac': 
        await Info.inf_fac(callback.message)



async def text_check(message: Message, state: FSMContext):
    user = message.from_user.first_name
    id = message.from_user.id
    print(id, user)


    # –ë–æ—Ç –∫–ª–∞–≤—ñ–∞—Ç—É—Ä–∞ –¥–ª—è –∞–±—ñ—Ç—É—Ä–∏
    if message.text == '‚ÑπÔ∏è –Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è':
        await Req.set_user(message.from_user.id, message.from_user.first_name, message.from_user.username) 
        await Info.info(message)
    
    elif message.text == '‚öôÔ∏è –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è': 
        await Req.set_user(message.from_user.id, message.from_user.first_name, message.from_user.username)
        pass
    
    elif message.text == '‚ùì –ü–æ—à–∏—Ä–µ–Ω—ñ –∑–∞–ø–∏—Ç–∞–Ω–Ω—è':
        await Req.set_user(message.from_user.id, message.from_user.first_name, message.from_user.username)
        await Question.abitur_topic(message)
        

    elif message.text == 'üë§ –ê–∫–∫–∞—É–Ω—Ç':
        await Req.set_user(message.from_user.id, message.from_user.first_name, message.from_user.username)
        await Support.account_users(message)
        

    elif message.text == 'üìñ –î–æ–ø–æ–º–æ–≥–∞':
        await Req.set_user(message.from_user.id, message.from_user.first_name, message.from_user.username)
        await Help.abitur_help(message)
        

    elif message.text == 'üåê –û–Ω–ª–∞–π–Ω –ø—ñ–¥—Ç—Ä–∏–º–∫–∞':
        await Req.set_user(message.from_user.id, message.from_user.first_name, message.from_user.username)
        await Support.support_start(message, state)
        

    # –ê–¥–º—ñ–Ω –ø–∞–Ω–µ–ª—å –≤ –≥—Ä—É–ø–ø—ñ
    elif message.text == '–ê–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∏':
        await Req.set_admins(message.from_user.id, message.from_user.first_name, '@' + message.from_user.username)
        await Func.admin_menu_bd(message)
            
    elif message.text == '–ü–æ–ø—É–ª—è—Ä–Ω—ñ –ø–∏—Ç–∞–Ω–Ω—è':
        await Req.set_admins(message.from_user.id, message.from_user.first_name, '@' + message.from_user.username)
        await message.answer('–í–∏ –≤ –º–µ–Ω—é –¥–ª—è –ø–æ–ø—É–ª—è—Ä–Ω–∏—Ö –ø–∏—Ç–∞–Ω—å, —â–æ –≤–∏ –± —Ö–æ—Ç—ñ–ª–∏ –∑—Ä–æ–±–∏—Ç–∏?', reply_markup= Keyboard.edit_quest_menu)    
    
    elif message.text == '–î–æ–ø–æ–º–æ–≥–∞':
        await Req.set_admins(message.from_user.id, message.from_user.first_name, '@' + message.from_user.username)
        await Help.help_inf(message)

    elif message.text == '–ü–µ—Ä–µ–≥–ª—è–¥ –ø–∏—Ç–∞–Ω—å':
        await Req.set_admins(message.from_user.id, message.from_user.first_name, '@' + message.from_user.username)
        await Support.show_records(message, state)
    
    
        # await Support.send_message(message, state)