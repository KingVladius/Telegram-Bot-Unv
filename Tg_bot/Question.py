import Tg_bot.Database.Requests as Req
import Tg_bot.Keyboard as Keyboard
from Tg_bot.FSM import question_db
from aiogram.types import Message
from aiogram.fsm.context import FSMContext


async def note_topic(message: Message):
    await message.edit_text('–í–∏ –º–æ–∂–µ—Ç–µ –∑–∞–ø–∏—Å–∞—Ç–∏ –Ω–æ–≤–∏–π –±–ª–æ–∫ –ø–∏—Ç–∞–Ω—å –∞–±–æ –æ–±—Ä–∞—Ç–∏ –∑ —Ç–æ–≥–æ, —â–æ –≤–∂–µ —î. –û–±–µ—Ä—ñ—Ç—å, —â–æ –±—É–¥–µ–º–æ —Ä–æ–±–∏—Ç–∏', reply_markup=Keyboard.topic)

async def set_new_topic(message: Message, state: FSMContext):
    await state.set_state(question_db.topic)
    await message.answer('–í–≤–µ–¥—ñ—Ç—å –±–ª–æ–∫ –ø–∏—Ç–∞–Ω—å (–ö—ñ–ª—å–∫—ñ—Å—Ç—å —Å–∏–º–≤–æ–ª—ñ–≤ - 30):',reply_markup=Keyboard.chanel)

async def set_old_topic(message: Message, state: FSMContext):
    await state.set_state(question_db.topic)
    data_topic = await Req.get_topic()
    if not data_topic:
        await message.answer('–ë–ª–æ–∫—ñ–≤ –ø–∏—Ç–∞–Ω—å –Ω–µ–º–∞, –æ–±–µ—Ä—ñ—Ç—å —ñ–Ω—à—É —Ñ—É–Ω–∫—Ü—ñ—è –¥–ª—è —Ç–æ–≥–æ, —â–æ–± —ó—Ö –∑–∞–ø–∏—Å–∞—Ç–∏.')
    await message.answer("–í–∏–±–µ—Ä—ñ—Ç—å –±–æ–ª–∫ –ø–∏—Ç–∞–Ω—å –∑ –ø–µ—Ä–µ–ª—ñ–∫—Éüëá", reply_markup= await Keyboard.get_all_topic())

async def set_question(message:Message, state:FSMContext):
    await state.set_state(question_db.que)
    await message.reply("–ù–∞–ø–∏—à—ñ—Ç—å –ø–∏—Ç–∞–Ω–Ω—è (–ö—ñ–ª—å–∫—ñ—Å—Ç—å —Å–∏–º–≤–æ–ª—ñ–≤ - 50):")

async def set_explanation(message: Message, state: FSMContext):
    await state.set_state(question_db.explanation)
    await message.reply("–ù–∞–ø–∏—à—ñ—Ç—å –≤—ñ–¥–ø–æ–≤—ñ–¥—å –¥–æ —Å–≤–æ–≥–æ –ø–∏—Ç–∞–Ω–Ω—è (–ö—ñ–ª—å–∫—ñ—Å—Ç—å —Å–∏–º–≤–æ–ª—ñ–≤ - 2–∫):")

async def add_question_db(message: Message, state: FSMContext):
    question_data = await state.get_data()
    await message.reply("–í–∞—à —Ç–µ–∫—Å—Ç –∑–∞–ø–∏—Å–∞–Ω–∏–π –≤ –±–∞–∑—É –¥–∞–Ω–Ω–∏—Ö", reply_markup=Keyboard.return_set)
    await Req.add_question(question_data['topic'], question_data['que'], question_data['explanation'])
    await state.clear()

async def Choose_edit_false(message: Message):
    await message.edit_text('–ó–∞–ø–∏—Å –∑–∞–≤–µ—Ä—à–µ–Ω–æ —ñ –≤—Å–µ –¥–æ–¥–∞–Ω–æ –¥–æ –±–∞–∑–∏ –¥–∞–Ω–Ω–∏—Ö')
    await message.answer('–©–æ –≤–∏ –æ–±–µ—Ä–µ—Ç–µ?', reply_markup=Keyboard.admin_menu)

async def abitur_topic(message: Message):
    await message.answer('–í–∏–±–µ—Ä—ñ—Ç—å –±–ª–æ–∫ –ø–∏—Ç–∞–Ω—å —è–∫—ñ –≤–∞—Å —Ü—ñ–∫–∞–≤–ª—è—Ç—å:', reply_markup=await Keyboard.topic_for_abiture())

async def abitur_topic_two(message: Message):
    await message.edit_text('–í–∏–±–µ—Ä—ñ—Ç—å –±–ª–æ–∫ –ø–∏—Ç–∞–Ω—å —è–∫—ñ –≤–∞—Å —Ü—ñ–∫–∞–≤–ª—è—Ç—å:', reply_markup=await Keyboard.topic_for_abiture())

async def edit_menu(message: Message):
    await message.edit_text('–û–±–µ—Ä—ñ—Ç—å, —â–æ –≤–∏ —Ö–æ—á–µ—Ç–µ —Ä–µ–¥–∞–≥—É–≤–∞—Ç–∏:', reply_markup=Keyboard.edit_block)

async def edit_topic(message:Message):
    await message.edit_text('–û–±–µ—Ä—ñ—Ç—å –±–ª–æ–∫ –ø–∏—Ç–∞–Ω—å —è–∫—ñ –≤–∏ —Ö–æ—á–µ—Ç–µ –∑–º—ñ–Ω–∏—Ç–∏:', reply_markup= await Keyboard.edit_topic_kb())

async def add_edit_topic(message: Message, state: FSMContext):
    await message.reply("–û–Ω–æ–≤–ª–µ–Ω–Ω—è –ø—Ä–æ—à–ª–æ —É—Å–ø—ñ—à–Ω–æ")
    edit_data = await state.get_data()
    await Req.update_edit_topic(edit_data['id_text'], edit_data['edit_topic'])
    await state.clear()

async def choice_topic(message: Message):
    await message.edit_text("–û–±–µ—Ä—ñ—Ç—å –±–ª–æ–∫ –ø–∏—Ç–∞–Ω—å –≤ —è–∫–æ–º—É –≤–∏ —Ö–æ—á–µ—Ç–µ –∑–º—ñ–Ω–∏—Ç–∏ –∑–∞–ø–∏—Ç–∞–Ω–Ω—è:", 
                            reply_markup= await Keyboard.choice_topic_kb())
    
async def add_new_question(message: Message, state: FSMContext):
    await message.reply("–û–Ω–æ–≤–ª–µ–Ω–Ω—è –ø—Ä–æ—à–ª–æ —É—Å–ø—ñ—à–Ω–æ")
    edit_data = await state.get_data()
    await Req.update_edit_question(edit_data['id_que'], edit_data['edit_que'])
    await state.clear()

async def choice_topic_two(message: Message):
    await message.edit_text("–î–ª—è —Ç–æ–≥–æ —â–æ–± –∑–º—ñ–Ω–∏—Ç–∏ –≤—ñ–¥–ø–æ–≤—ñ–¥—å, –≤–∞–º –ø–æ—Ç—Ä—ñ–±–Ω–æ –≤–∏–±—Ä–∞—Ç–∏ –±–ª–æ–∫ –≤ —è–∫–æ–º—É –≤–æ–Ω–∞ –∑–Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è:", 
                            reply_markup= await Keyboard.choice_topic_kb_two())
    
async def add_new_answer(message: Message, state: FSMContext):
    await message.reply("–û–Ω–æ–≤–ª–µ–Ω–Ω—è –ø—Ä–æ—à–ª–æ —É—Å–ø—ñ—à–Ω–æ")
    edit_data = await state.get_data()
    await Req.update_edit_answer(edit_data['id_answer'], edit_data['edit_answer'])
    await state.clear()

async def delete_question(message: Message):
    txt = ['''–í—ñ—Ç–∞—é! –©–æ–± –≤–∏–¥–∞–ª–∏—Ç–∏ –ø–∏—Ç–∞–Ω–Ω—è, –ø–æ—Ç—Ä—ñ–±–Ω–æ –æ–±—Ä–∞—Ç–∏ –±–ª–æ–∫ —ñ –æ–±—Ä–∞—Ç–∏ –ø–∏—Ç–∞–Ω–Ω—è —è–∫–µ –≤–∏ —Ö–æ—á–µ—Ç–µ –≤–∏–¥–∞–ª–∏—Ç–∏\n
üõë ! –£–í–ê–ì–ê ! üõë
–ü–ò—Ç–∞–Ω–Ω—è —è–∫–µ –≤–∏ –≤–∏–¥–∞–ª–∏—Ç–µ –Ω–µ –º–æ–∂–ª–∏–≤–æ –±—É–¥–µ –ø–æ–≤–µ—Ä–Ω—É—Ç–∏ –Ω–∞–∑–∞–¥, —Ç—ñ–ª—å–∫–∏ —è–∫—â–æ –∑–∞–Ω–æ–≤–æ –π–æ–≥–æ –Ω–∞–ø–∏—Å–∞—Ç–∏
''']
    await message.edit_text(txt[0], reply_markup= await Keyboard.choice_topic_delete())

async def tabl_clear(message: Message, state: FSMContext):
    await message.reply("–í—Å–µ –ø—Ä–æ–π—à–ª–æ –¥–æ–±—Ä–µ")
    delete_data = await state.get_data()
    await Req.delete_tabl(delete_data['id_question'])
    await state.clear()