from aiogram.types import ReplyKeyboardMarkup, KeyboardButton, InlineKeyboardButton, InlineKeyboardMarkup
from aiogram.utils.keyboard import ReplyKeyboardBuilder, InlineKeyboardBuilder
from Tg_bot.Database.Requests import get_topic, get_question

# –ú–µ–Ω—é –ø—Ä–∏ –≤—Ö–æ–¥—ñ –≤ —Å–∞–º –±–æ—Ç –¥–ª—è –∞–±—ñ—Ç—É—Ä–∏
menu = ReplyKeyboardMarkup(
    keyboard= [
        [KeyboardButton(text='üåê –û–Ω–ª–∞–π–Ω –ø—ñ–¥—Ç—Ä–∏–º–∫–∞'), KeyboardButton(text='‚ÑπÔ∏è –Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è')],
        [KeyboardButton(text='‚ùì –ü–æ—à–∏—Ä–µ–Ω—ñ –∑–∞–ø–∏—Ç–∞–Ω–Ω—è'),KeyboardButton(text='üë§ –ê–∫–∫–∞—É–Ω—Ç')], # KeyboardButton(text='‚öôÔ∏è –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è')
        [ KeyboardButton(text='üìñ –î–æ–ø–æ–º–æ–≥–∞')]
    ],
    resize_keyboard=True, 
    input_field_pleceholder="–û–±–µ—Ä—ñ—Ç—å –ø—É–Ω–∫—Ç –º–µ–Ω—é"
)

journal = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text='–ü–µ—Ä–µ–π—Ç–∏ –Ω–∞ Journal', url='https://example.com')]
])

menu_adm = ReplyKeyboardMarkup(
    keyboard=[
        [KeyboardButton(text='–ü–µ—Ä–µ–≥–ª—è–¥ –ø–∏—Ç–∞–Ω—å')]
    ],
    resize_keyboard=True, 
    input_field_pleceholder="–û–±–µ—Ä—ñ—Ç—å –ø—É–Ω–∫—Ç –º–µ–Ω—é"
)

bot_call = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text='–ü–µ—Ä–µ–π—Ç–∏ –≤ –±–æ—Ç', url='https://t.me/N_T_U_bot')]
])

return_topic = InlineKeyboardMarkup(inline_keyboard=[[InlineKeyboardButton(text='–ù–∞–∑–∞–¥', callback_data='return_topic')]])

# # # # # # # #
# –ö–Ω–æ–ø–∫–∏ –∑ –±–¥ #
# # # # # # # #

admin_menu = ReplyKeyboardMarkup(keyboard=[
    [KeyboardButton(text='–ê–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∏'), KeyboardButton(text='–ü–æ–ø—É–ª—è—Ä–Ω—ñ –ø–∏—Ç–∞–Ω–Ω—è')],
    [KeyboardButton(text='–î–æ–ø–æ–º–æ–≥–∞')]
],
resize_keyboard=True,
input_field_placeholder='–í—ñ—Ç–∞—é, –æ–±–µ—Ä—ñ—Ç—å –¥—ñ—é –∑ –∫–ª–∞–≤—ñ–∞—Ç—É—Ä–∏'
)

chanel = ReplyKeyboardMarkup(keyboard=[[KeyboardButton(text='‚ùå –í—ñ–¥–º—ñ–Ω–∞')]], resize_keyboard=True)

out_role = InlineKeyboardMarkup(inline_keyboard=[[InlineKeyboardButton(text='–ù–∞–∑–∞–¥', callback_data='chanel_func')]])

back_on_menu_bd = InlineKeyboardMarkup(inline_keyboard=[[InlineKeyboardButton(text="–ù–∞–∑–∞–¥", callback_data='back_to_menu')]])

bd_admin_menu = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text='–¢–∞–±–ª–∏—Ü—ñ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä—ñ–≤', callback_data='bd_admin_tabl'), 
    InlineKeyboardButton(text='–í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è/–ó–º—ñ–Ω–∞ —Ä–æ–ª—ñ', callback_data='bd_admin_role')]
])

edit_quest_menu = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text='–†–µ–¥–∞–≥—É–≤–∞—Ç–∏ –ø–∏—Ç–∞–Ω–Ω—è', callback_data='edit'),
    InlineKeyboardButton(text='–ó–∞–ø–∏—Å–∞—Ç–∏ –Ω–æ–≤–µ –ø–∏—Ç–∞–Ω–Ω—è', callback_data='notes')],
    [InlineKeyboardButton(text='–í–∏–¥–∞–ª–∏—Ç–∏ –ø–∏—Ç–∞–Ω–Ω—è', callback_data='delete')]
])

edit_block = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text='–ë–ª–æ–∫ –ø–∏—Ç–∞–Ω—å', callback_data='edit_topic'),
    InlineKeyboardButton(text='–ü–∏—Ç–∞–Ω–Ω—è', callback_data='edit_quest')],
    [InlineKeyboardButton(text='–í—ñ–¥–ø–æ–≤—ñ–¥—å', callback_data='edit_answer'),
    InlineKeyboardButton(text='–ù–∞–∑–∞–¥', callback_data='back_edit') ]
])

topic = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text='–ù–æ–≤–∏–π –±–ª–æ–∫', callback_data='topic_new'), 
    InlineKeyboardButton(text='–û–±—Ä–∞—Ç–∏ –±–ª–æ–∫', callback_data='topic_old')],
    [InlineKeyboardButton(text='–ù–∞–∑–∞–¥',callback_data='out_popular')]
])

return_set = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text='–¢–∞–∫', callback_data='edit_true'),
    InlineKeyboardButton(text='–ù—ñ', callback_data='edit_false')]
])

async def get_all_topic():
    all_topic = await get_topic()
    keyboard = ReplyKeyboardBuilder()
    for txt in all_topic:
        keyboard.add(KeyboardButton(text=txt.topic))
    keyboard.add(KeyboardButton(text='‚ùå –í—ñ–¥–º—ñ–Ω–∞'))
    return keyboard.adjust(2).as_markup(resize_keyboard=True)

async def topic_for_abiture():
    all_topic = await get_topic()
    keyboard = InlineKeyboardBuilder()
    for txt in all_topic:
        keyboard.add(InlineKeyboardButton(text=txt.topic, callback_data = f'category_{txt.id}'))
    return keyboard.adjust(1).as_markup()

async def question_for_abiture(question_data):
    all_quest = await get_question(question_data)
    keyboard = InlineKeyboardBuilder()
    for txt in all_quest:
        keyboard.add(InlineKeyboardButton(text=txt.question, callback_data = f'question_{txt.id}'))
    keyboard.add(InlineKeyboardButton(text='üåê –û–Ω–ª–∞–π–Ω –ø—ñ–¥—Ä–∏–º–∫–∞', callback_data='online_support'))
    keyboard.add(InlineKeyboardButton(text='‚ùå –í –º–µ–Ω—é', callback_data='to_menu'))
    return keyboard.adjust(1).as_markup()

async def edit_topic_kb():
    edit_topic = await get_topic()
    keyboard = InlineKeyboardBuilder()
    for txt in edit_topic:
        keyboard.add(InlineKeyboardButton(text=txt.topic, callback_data = f'edittopic_{txt.id}'))    
    keyboard.add(InlineKeyboardButton(text='–ù–∞–∑–∞–¥', callback_data='edit_menu_back'))
    return keyboard.adjust(1).as_markup()

async def choice_topic_kb():
    edit_topic = await get_topic()
    keyboard = InlineKeyboardBuilder()
    for txt in edit_topic:
        keyboard.add(InlineKeyboardButton(text=txt.topic, callback_data = f'choicetopic_{txt.id}'))    
    keyboard.add(InlineKeyboardButton(text='–ù–∞–∑–∞–¥', callback_data='edit_menu_back'))
    return keyboard.adjust(1).as_markup()

async def edit_question_kb(id_topic):
    edit_quest = await get_question(id_topic)
    keyboard = InlineKeyboardBuilder()
    for txt in edit_quest:
        keyboard.add(InlineKeyboardButton(text=txt.question, callback_data = f'editque_{txt.id}'))
    keyboard.add(InlineKeyboardButton(text='–ù–∞–∑–∞–¥', callback_data='edit_menu_back'))
    return keyboard.adjust(1).as_markup()

async def choice_topic_kb_two():
    edit_topic = await get_topic()
    keyboard = InlineKeyboardBuilder()
    for txt in edit_topic:
        keyboard.add(InlineKeyboardButton(text=txt.topic, callback_data = f'twicetopic_{txt.id}'))    
    keyboard.add(InlineKeyboardButton(text='–ù–∞–∑–∞–¥', callback_data='edit_menu_back'))
    return keyboard.adjust(1).as_markup()

async def choice_question_kb(id_topic):
    edit_quest = await get_question(id_topic)
    keyboard = InlineKeyboardBuilder()
    for txt in edit_quest:
        keyboard.add(InlineKeyboardButton(text=txt.question, callback_data = f'choiceque_{txt.id}'))
    keyboard.add(InlineKeyboardButton(text='–ù–∞–∑–∞–¥', callback_data='edit_menu_back'))
    return keyboard.adjust(1).as_markup()

async def choice_topic_delete():
    choice_topic = await get_topic()
    keyboard = InlineKeyboardBuilder()
    for txt in choice_topic:
        keyboard.add(InlineKeyboardButton(text=txt.topic, callback_data = f'deletetop_{txt.id}'))    
    keyboard.add(InlineKeyboardButton(text='–ù–∞–∑–∞–¥', callback_data='back_edit'))
    return keyboard.adjust(1).as_markup()

async def delete_question(id_question):
    edit_quest = await get_question(id_question)
    keyboard = InlineKeyboardBuilder()
    for txt in edit_quest:
        keyboard.add(InlineKeyboardButton(text=txt.question, callback_data = f'deleteque_{txt.id}'))
    keyboard.add(InlineKeyboardButton(text='–ù–∞–∑–∞–¥', callback_data='back_edit'))
    return keyboard.adjust(1).as_markup()

# # # # # # # #
# –ö–Ω–æ–ø–∫–∏ –∑ inf#
# # # # # # # #

inf = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text='–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ —É–Ω—ñ–≤–µ—Ä—Å–∏—Ç–µ—Ç', callback_data='univ'),
    InlineKeyboardButton(text='–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ —Ñ–∞–∫—É–ª—å—Ç–µ—Ç', callback_data='fac')]
])

inf_university = InlineKeyboardMarkup(inline_keyboard=[[InlineKeyboardButton(text='–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ —Ñ–∞–∫—É–ª—å—Ç–µ—Ç', callback_data='fac')]])

inf_facultet = InlineKeyboardMarkup(inline_keyboard=[[InlineKeyboardButton(text='–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ —É–Ω—ñ–≤–µ—Ä—Å–∏—Ç–µ—Ç', callback_data='univ')]])

# # # # # # # # #
# –ö–Ω–æ–ø–∫–∏ –∑ help #
# # # # # # # # #

All_help = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text='–ê–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∏', callback_data='1'), 
    InlineKeyboardButton(text='–ü–æ–ø—É–ª—è—Ä–Ω—ñ –ø–∏—Ç–∞–Ω–Ω—è', callback_data='2') ]
])

One_table = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text='–ù–∞–∑–∞–¥',callback_data='back_all_help'),
    InlineKeyboardButton(text='1/2', callback_data='0'),
    InlineKeyboardButton(text='‚û°Ô∏è', callback_data='2')]
])

Two_table = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text='‚¨ÖÔ∏è', callback_data='1'),
    InlineKeyboardButton(text='2/2', callback_data='0'),
    InlineKeyboardButton(text='–ù–∞–∑–∞–¥',callback_data='back_all_help') ]
])

All_abiture_help = InlineKeyboardMarkup(inline_keyboard=[       # Abitura
    [InlineKeyboardButton(text='üåê –û–Ω–ª–∞–π–Ω –ø—ñ–¥—Ä–∏–º–∫–∞',  callback_data='1.1'), 
    InlineKeyboardButton(text='‚ÑπÔ∏è –Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è', callback_data='2.2')],
    [InlineKeyboardButton(text='‚ùì –ü–æ—à–∏—Ä–µ–Ω—ñ –∑–∞–ø–∏—Ç–∞–Ω–Ω—è', callback_data='3.3'), #InlineKeyboardButton(text='‚öôÔ∏è –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è', callback_data='4.4')
    InlineKeyboardButton(text='üë§ –ê–∫–∫–∞—É–Ω—Ç', callback_data='5.5')]
])

help_11 = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text='–ù–∞–∑–∞–¥', callback_data='to_menu_help'),
    InlineKeyboardButton(text='‚û°Ô∏è', callback_data='2.2') ]
])

help_22 =InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text='‚¨ÖÔ∏è', callback_data='1.1'),
    InlineKeyboardButton(text='–ù–∞–∑–∞–¥', callback_data='to_menu_help'), 
    InlineKeyboardButton(text='‚û°Ô∏è', callback_data='3.3') ]
])

help_33 =InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text='‚¨ÖÔ∏è', callback_data='2.2'),
    InlineKeyboardButton(text='–ù–∞–∑–∞–¥', callback_data='to_menu_help'), 
    InlineKeyboardButton(text='‚û°Ô∏è', callback_data='5.5') ]
])

# help_44 =InlineKeyboardMarkup(inline_keyboard=[
#     [InlineKeyboardButton(text='‚¨ÖÔ∏è', callback_data='3.3'),
#     InlineKeyboardButton(text='–ù–∞–∑–∞–¥', callback_data='to_menu_help'), 
#     InlineKeyboardButton(text='‚û°Ô∏è', callback_data='5.5') ]
# ])

help_55 = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text='‚¨ÖÔ∏è', callback_data='3.3'),
    InlineKeyboardButton(text='–ù–∞–∑–∞–¥', callback_data='to_menu_help') ]
])

# # # # # # # # #
# –ö–Ω–æ–ø–∫–∏ online #
# # # # # # # # #

async def recor_keyboard(record_id, total):
    
    buttons = []
    if record_id > 1:
        buttons.append(InlineKeyboardButton(text='‚¨ÖÔ∏è', callback_data=f'prev_record_{record_id - 1}'))
    buttons.append(InlineKeyboardButton(text='–í–∑—è—Ç–∏—Å—å', callback_data=f'take_appeal_{record_id}'))
    if  record_id < total:
        buttons.append(InlineKeyboardButton(text='‚û°Ô∏è', callback_data=f'next_record_{record_id + 1}'))
    keyboard = InlineKeyboardMarkup(inline_keyboard=[buttons])
    return keyboard

chat_stop = ReplyKeyboardMarkup(keyboard=[
    [KeyboardButton(text='–ó–∞–≤–µ—Ä—à–∏—Ç–∏ –¥—ñ–∞–ª–æ–≥')]
],
resize_keyboard=True,
input_field_placeholder='–ù–∞–ø–∏—à—ñ—Ç—å –≤—ñ–¥–ø–æ–≤—ñ–¥—å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É'
)

what_question = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text='–¢–∞–∫', callback_data='q_true'),
    InlineKeyboardButton(text='–ù—ñ', callback_data='q_false')]
])